[gd_scene load_steps=4 format=3 uid="uid://hln0cnn4xcjd"]

[ext_resource type="Texture2D" uid="uid://cx5g6f0ee5cmw" path="res://assets/sprites/player/DatPlayer.png" id="1_8p05u"]

[sub_resource type="GDScript" id="GDScript_h76iv"]
resource_name = "playerMouvement"
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0
const DASH_SPEED = 900.0
var dashing = false
var canDash = true


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	if Input.is_action_just_pressed(\"dash\") and canDash :
		dashing = true
		canDash = false
		$dashTimer.start()
		$canDashTimer.start()
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"left\", \"right\")
	if direction:
		if dashing:
			velocity.x = direction * DASH_SPEED
		else:
			velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()



func _on_dash_timer_timeout() -> void:
	dashing = false
	

func _on_can_dash_timer_timeout() -> void:
	canDash = true
	
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_1kwx4"]
size = Vector2(41, 87)

[node name="player" type="Node2D"]

[node name="CharacterBody2D" type="CharacterBody2D" parent="."]
script = SubResource("GDScript_h76iv")

[node name="Sprite2D" type="Sprite2D" parent="CharacterBody2D"]
texture = ExtResource("1_8p05u")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D"]
position = Vector2(-13.5, 20.5)
shape = SubResource("RectangleShape2D_1kwx4")

[node name="dashTimer" type="Timer" parent="CharacterBody2D"]
wait_time = 0.2

[node name="canDashTimer" type="Timer" parent="CharacterBody2D"]
wait_time = 2.0

[connection signal="timeout" from="CharacterBody2D/dashTimer" to="CharacterBody2D" method="_on_dash_timer_timeout"]
[connection signal="timeout" from="CharacterBody2D/canDashTimer" to="CharacterBody2D" method="_on_canDashTimer_timeout"]
[connection signal="timeout" from="CharacterBody2D/canDashTimer" to="CharacterBody2D" method="_on_can_dash_timer_timeout"]
